# Logstash Pipeline for HIDS Alerts
# Processes host-based detection alerts (file integrity, process monitoring, log analysis)

input {
  # Read HIDS alerts from JSON log file
  file {
    path => "/var/log/hybrid-ids/hids_alerts.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    type => "hids_alert"
    tags => ["hids", "host-based", "security"]
  }

  # TCP input for real-time alerts (optional)
  tcp {
    port => 5001
    codec => "json"
    type => "hids_alert"
    tags => ["hids", "host-based", "realtime"]
  }
}

filter {
  if [type] == "hids_alert" {
    # Parse timestamp
    date {
      match => [ "timestamp", "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd HH:mm:ss", "ISO8601" ]
      target => "@timestamp"
    }

    # Extract alert type
    if [alert_type] {
      mutate {
        add_field => { "event.module" => "hids" }
        add_field => { "event.dataset" => "hybrid_ids.hids.%{alert_type}" }
      }
    }

    # Process file integrity alerts
    if [alert_type] == "file_integrity" {
      mutate {
        add_field => { "event.action" => "file_change" }
        add_field => { "event.category" => "file" }
      }

      # Categorize by change type
      if [details][type] == "MODIFIED_FILE" {
        mutate { add_field => { "file.action" => "modification" } }
      } else if [details][type] == "NEW_FILE" {
        mutate { add_field => { "file.action" => "creation" } }
      } else if [details][type] == "DELETED_FILE" {
        mutate { add_field => { "file.action" => "deletion" } }
      }

      # Extract file path
      if [details][filepath] {
        mutate {
          add_field => { "file.path" => "%{[details][filepath]}" }
        }
      }
    }

    # Process process monitoring alerts
    if [alert_type] == "process_monitoring" {
      mutate {
        add_field => { "event.action" => "process_activity" }
        add_field => { "event.category" => "process" }
      }

      # Extract process details
      if [details][pid] {
        mutate {
          convert => { "[details][pid]" => "integer" }
          add_field => { "process.pid" => "%{[details][pid]}" }
        }
      }

      if [details][name] {
        mutate {
          add_field => { "process.name" => "%{[details][name]}" }
        }
      }

      if [details][exe] {
        mutate {
          add_field => { "process.executable" => "%{[details][exe]}" }
        }
      }

      if [details][cmdline] {
        mutate {
          add_field => { "process.command_line" => "%{[details][cmdline]}" }
        }
      }

      # Network connection details
      if [details][remote_addr] {
        mutate {
          add_field => { "destination.address" => "%{[details][remote_addr]}" }
        }
      }
    }

    # Process log analysis alerts
    if [alert_type] == "log_analysis" {
      mutate {
        add_field => { "event.action" => "log_event" }
        add_field => { "event.category" => "authentication" }
      }

      # Extract rule name and category
      if [details][rule_name] {
        mutate {
          add_field => { "rule.name" => "%{[details][rule_name]}" }
        }
      }

      if [details][category] {
        mutate {
          add_field => { "event.category" => "%{[details][category]}" }
        }
      }

      # Authentication events
      if [details][username] {
        mutate {
          add_field => { "user.name" => "%{[details][username]}" }
        }
      }

      if [details][failed_attempts] {
        mutate {
          convert => { "[details][failed_attempts]" => "integer" }
          add_field => { "authentication.failed_attempts" => "%{[details][failed_attempts]}" }
        }
      }
    }

    # Severity mapping
    if [severity] {
      if [severity] == "CRITICAL" {
        mutate { add_field => { "severity_level" => 4 } }
      } else if [severity] == "HIGH" {
        mutate { add_field => { "severity_level" => 3 } }
      } else if [severity] == "MEDIUM" {
        mutate { add_field => { "severity_level" => 2 } }
      } else if [severity] == "LOW" {
        mutate { add_field => { "severity_level" => 1 } }
      }
    }

    # Add host information
    if [host] {
      mutate {
        add_field => { "host.name" => "%{host}" }
      }
    }

    # Standard event fields
    mutate {
      add_field => { "event.kind" => "alert" }
      add_field => { "event.type" => "indicator" }
    }
  }
}

output {
  if [type] == "hids_alert" {
    # Send to Elasticsearch
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "hybrid-ids-hids-alerts-%{+YYYY.MM.dd}"
      document_type => "_doc"
    }

    # Debug output (optional)
    # stdout { codec => rubydebug }
  }
}
